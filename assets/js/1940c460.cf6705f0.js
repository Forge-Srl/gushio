"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7016],{4221:function(i){i.exports=JSON.parse('{"pluginId":"default","version":"0.7.2","label":"0.7.2","banner":null,"badge":true,"className":"docs-version-0.7.2","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/gushio/docs/intro","docId":"intro"},{"type":"link","label":"Creating a script","href":"/gushio/docs/creating-script","docId":"creating-script"},{"type":"category","label":"Scripting utilities","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Write styled text","href":"/gushio/docs/scripting-utilities/write-styled-text","docId":"scripting-utilities/write-styled-text"},{"type":"link","label":"Await with spinners","href":"/gushio/docs/scripting-utilities/spinners","docId":"scripting-utilities/spinners"},{"type":"link","label":"Read user input","href":"/gushio/docs/scripting-utilities/read-user-input","docId":"scripting-utilities/read-user-input"},{"type":"link","label":"HTTP requests","href":"/gushio/docs/scripting-utilities/http-requests","docId":"scripting-utilities/http-requests"},{"type":"link","label":"File System","href":"/gushio/docs/scripting-utilities/file-system","docId":"scripting-utilities/file-system"},{"type":"link","label":"File Parsing","href":"/gushio/docs/scripting-utilities/file-parsing","docId":"scripting-utilities/file-parsing"},{"type":"link","label":"Timers","href":"/gushio/docs/scripting-utilities/timers","docId":"scripting-utilities/timers"},{"type":"link","label":"Exit with error","href":"/gushio/docs/scripting-utilities/exit-with-error","docId":"scripting-utilities/exit-with-error"},{"type":"link","label":"Gushio utilities","href":"/gushio/docs/scripting-utilities/gushio-utilities","docId":"scripting-utilities/gushio-utilities"}]},{"type":"link","label":"Running a script","href":"/gushio/docs/running-script","docId":"running-script"}]},"docs":{"creating-script":{"id":"creating-script","title":"Creating a script","description":"A Gushio script file is a standard JavaScript file which exports an asynchronous run function. You can use either ESM","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Install Gushio with npm:","sidebar":"tutorialSidebar"},"running-script":{"id":"running-script","title":"Running a script","description":"To run a Gushio script pass the script to the gushio executable. If your script needs arguments and/or options, you","sidebar":"tutorialSidebar"},"scripting-utilities/exit-with-error":{"id":"scripting-utilities/exit-with-error","title":"Exit with error","description":"If you need to notify to the user the failure of your script you can simply throw an Error (possibly with an","sidebar":"tutorialSidebar"},"scripting-utilities/file-parsing":{"id":"scripting-utilities/file-parsing","title":"File Parsing","description":"JavaScript already provides JSON object for handling JSON format. Gushio adds a similar support for the YAML format","sidebar":"tutorialSidebar"},"scripting-utilities/file-system":{"id":"scripting-utilities/file-system","title":"File System","description":"You can access the file system directly using the fs object, which is a wrapper around","sidebar":"tutorialSidebar"},"scripting-utilities/gushio-utilities":{"id":"scripting-utilities/gushio-utilities","title":"Gushio utilities","description":"Gushio provides one additional global object gushio containing utilities and information about Gushio itself.","sidebar":"tutorialSidebar"},"scripting-utilities/http-requests":{"id":"scripting-utilities/http-requests","title":"HTTP requests","description":"You can make HTTP and HTTPS requests directly using fetch, which is a wrapper around","sidebar":"tutorialSidebar"},"scripting-utilities/read-user-input":{"id":"scripting-utilities/read-user-input","title":"Read user input","description":"You can read user input with console.input(). For example:","sidebar":"tutorialSidebar"},"scripting-utilities/spinners":{"id":"scripting-utilities/spinners","title":"Await with spinners","description":"You can await a long promise to resolve while showing a spinner with console.spinner(). For example:","sidebar":"tutorialSidebar"},"scripting-utilities/timers":{"id":"scripting-utilities/timers","title":"Timers","description":"In case you need to wait some time or handle concurrent promises you can use the global object timer.","sidebar":"tutorialSidebar"},"scripting-utilities/write-styled-text":{"id":"scripting-utilities/write-styled-text","title":"Write styled text","description":"You can change output text color directly from the string itself. For example:","sidebar":"tutorialSidebar"}}}')}}]);